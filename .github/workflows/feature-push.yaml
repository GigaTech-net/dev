---
name: Feature push workflow

on:
  push:
    branches:
      - '**'
      - '!main'
      - '!master'
      - '!test'
      - '!development'

permissions:
  actions: read
  checks: read
  contents: write
  deployments: read
  issues: read
  discussions: read
  packages: read
  pages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: write

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  IMAGE_REPOSITORY: dev
  IMAGE_REGISTRY: gigatech
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  setup:
    name: Setup
    permissions: read-all
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-setup.yaml@main

  lint:
    name: Lint Code Base
    needs: [setup]
    permissions:
      contents: read
      statuses: write
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-super-linter.yaml@main
    with:
      ### For a DevOps-focused repository. Prevents some code-language linters from running
      devops-only: false
      ### A regex to exclude files from linting
      filter-regex-exclude: ".*[src|(github)]\\/.*"

  secret-scan:
    name: Secret Scan
    needs: [setup]
    permissions: read-all
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-secret-scan.yaml@main

  spellcheck:
    name: Spellcheck codebase
    needs: [setup]
    permissions:
      contents: write
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-spellcheck.yaml@main
    with:
      filesToIgnore: 'package-lock.json,./.vscode,./.github'

  dependency-check:
    uses: GigaTech-net/public-reusable-workflows/.github/workflows/rw-dependency-check.yaml@main
    needs: [setup]
    permissions: read-all
    with:
      retentionDays: 1

  build:
    name: Build
    needs: [setup, spellcheck]
    permissions:
      contents: read
      statuses: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        if: github.actor != 'dependabot[bot]'
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}  # The base image name

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.actor != 'dependabot[bot]' }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
